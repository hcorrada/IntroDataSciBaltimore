V[[i]] = attrib[[i]]%*%beta
}
V=c()
for(i =1:nchoices){
V[[i]] = attrib[[i]]%*%beta
}
i
for(i in 1:nchoices){
V[[i]] = attrib[[i]]%*%beta
}
plot(V[[4]])
V[[i]] = V[[i]](idx)
V[[i]] = V[[i]][idx]
V[[i]] = V[[i]][idx[[i]]]
length(V[[i]])
length(V[[i-1]])
V=c()
for(i in 1:nchoices){
V[[i]] = attrib[[i]]%*%beta
V[[i]] = V[[i]][idx[[i]]]
}
length(V[[i-1]])
length(V[[i-3]])
V=c()
for(i in 1:nchoices){
V[[i]] = attrib[[i]]%*%beta
#V[[i]] = V[[i]][idx[[i]]]
}
length(V[[i-3]])
length(V[[i-2]])
V=c()
for(i in 1:nchoices){
V[[i]] = attrib[[i]]%*%beta
V[[i]] = V[[i]][idx[[y]]]
}
y=1
V=c()
for(i in 1:nchoices){
V[[i]] = attrib[[i]]%*%beta
V[[i]] = V[[i]][idx[[y]]]
}
length(V[[i-2]])
length(V[[i-1]])
length(V[[i-4]])
Vdiff = V[[-y]]
-y
(1:3)
(1:3)[-2]
(1:nchoices)[-y]
Vdiff=c()
for(j in (1:nchoices)[-y]){
Vdiff = c(Vdiff, V[[y]]-V[[i]])
}
Vdiff[11]
Vdiff[[1]]
Vdiff[,1]==V[[1]]-V[[2]]
View(Vdiff)
V[[y]]-V[[i]]
Vdiff=c()
j=1
for(i in (1:nchoices)[-y]){
Vdiff[[j]] = V[[y]]-V[[i]]
j=j+1
}
Vdiff[[1]] - (V[[1]]-V[[2]])
Vdiff[[2]] - (V[[1]]-V[[3]])
Vdiff[[3]] - (V[[1]]-V[[4]])
cbind(Vdiff)
Vdiff=c()
j=1
for(i in (1:nchoices)[-y]){
Vdiff = cbind(Vdiff, V[[y]]-V[[i]])
j=j+1
}
View(Vdiff)
Vdiff[,3] - (V[[1]]-V[[4]])
Vdiff[[1]] - (V[[1]]-V[[2]])
plot(Vdiff[[1]] - (V[[1]]-V[[2]]))
plot(Vdiff[[3]] - (V[[1]]-V[[4]]))
Vdiff[[3]] - (V[[1]]-V[[4]])
Vdiff[[3]] - (V[[1]]-V[[2]])
a=c()
a=cbind(a,4)
a
a=cbind(a,5)
a
View(V)
?write
write(V,file="V",ncolumns=4,sep=",")
write(V,file="V",ncolumns=4,sep="\t")
as.matrix(V)
write(cbind(V[[1]],V[[2]],V[[3]],V[[4]]),file="V",ncolumns=4,sep="\t")
write(cbind(V[[1]],V[[2]],V[[3]],V[[4]]),file=paste(path,"V.txt",sep=""),ncolumns=4,sep="\t")
View(Vdiff)
V[[1]]
write(t(cbind(V[[1]],V[[2]],V[[3]],V[[4]])),file=paste(path,"V.txt",sep=""),ncolumns=4,sep="\t")
VIew(Vdiff)
View(Vdiff)
T = sum(idx[[y]])
T
?pmvnorm
?dmvnorm
M = diag(nchoices-1)
M
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
Pr(1,beta,diag(3))
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
Pr(1,beta,diag(3))
Pr(2,beta,diag(3))
Pr(3,beta,diag(3))
Pr(4,beta,diag(3))
Pr(4,beta,diag(3))
Pr(4,beta,diag(3))
Pr(5,beta,diag(3))
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
Pr(4,beta,diag(3))
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
Pr(4,beta,diag(3))
Pr(3,beta,diag(3))
Pr(2,beta,diag(3))
aa=c(1,2,3,45)
aa[2,3]
aa[2:3]
a[2:]
a
aa
aa[2:]
matrix(aa)
matrix(aa,ncrows=2)
matrix(aa,nrows=2)
matrix(aa,nrow=2)
aa
lower.tri(aa)
lower.tri(aa,nrow=3)
lower.tri(aa,nrow=2)
?lower.tri
aa[lower.tri(aa)]
?matrix
matrix(aa)
matrix(aa,nrow=2)
matrix(aa,nrow=2,byrow=T)
aa=1:16
matrix(aa,nrow=4,byrow=T)
matrix(aa,nrow=4,byrow=F)
row(aa)
A = matrix(aa,nrow=4)
row(aa)
row(A)
aa=seq(1,16)
aa
matrix(aa,nrow=4)
aa=seq(1,9)
matrix(aa,nrow=3)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
c(beta,1,0,1)
params=c(beta,1,0,1)
LL(params)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
LL(params)
sig_vals
lowertri(c(1,0,1))
matrix(aa,nrol=3)
aa
matrix(aa,nrow=3)
params=c(beta,1,0,1,0,1)
LL(params)
print(2)
LL(params)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
LL(params)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
LL(params)
params=c(1,0,0,1,0,1)
params=c(beta,1,0,0,1,0,1)
LL(params)
LL(params)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
ss=lowertri(sig_vals)
SS
ss
sig_vals = 1:6
ss=lowertri(sig_vals)
ss
ss[lower.ss]
ss[lower.tri(ss)]
ss[upper.tri(ss)]=ss[lower.tri(ss)]
ss
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
mle=optim(par=start, fn=LL,method="BFGS",control=list(fnscale = -1), hessian=T)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
mle=optim(par=start, fn=LL,method="BFGS",control=list(fnscale = -1), hessian=T)
symmetric(2:7)
aa=symmetric(2:7)
aa/aa[1]
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
mle=optim(par=start, fn=LL,method="BFGS",control=list(fnscale = -1), hessian=T)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
length(parama)
length(params)
length(start)
diag(3)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
about
print(about)
source('C:/Users/annampetrone/Google Drive/UMD/classes/ENCE688I - Discrete Choice Analysis/lab-5 probit/probit.R')
path = "C:/Users/annampetrone/Documents/School/Transportation/rebalancing-optimization/opt/opl3/rebal3/"
path = "C:/Users/annampetrone/Documents/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/"
pfx = "AM2-5min"
netrate = read.table(paste(path,pfx,"-group-replacement.csv",sep=""),  sep=",", header=TRUE)
netrate = read.table(paste(path,pfx,"-group-replacement.csv",sep=""),  sep=",", header=TRUE)
View(netrate)
View(netrate)
maxj = 30 # 138 # max capacity of a group
info = read.table(paste(path,pfx,"-group-info",sep=""),  sep=",", header=TRUE)
info = read.table(paste(path,pfx,"-group-info.csv",sep=""),  sep=",", header=TRUE)
groups = info$terminal
ngroups = length(groups)
times = unique(netrate$t)
ntime = length(times)
zerotol = 10E-6
poisfile = paste(path , pfx, "-group-pois.csv",sep="")
#file.remove(poisfile)
header=c("terminal","i","t","j","Pj_lamda","lambda","Pj_mu","mu","CDF(B|lambda)","CDF(D|mu)")
write(header,sep=",",file=poisfile,append=F,ncolumns=length(header))
write(header,sep=",",file=poisfile,append=F,ncolumns=length(header))
groups = info$i
iidx = netrate$i ==groups[i]
i=1
iidx = netrate$i ==groups[i]
sum(iidx())
sum(iidx)
t=1
tidx = netrate$t == times[t]
itlambda = netrate$departure_rate[ iidx & tidx]
itlambda
itmu = netrate$arrival_rate[ iidx & tidx]
netrate = read.table(paste(path,pfx,"-replacement.csv",sep=""),  sep=",", header=TRUE)
times = unique(netrate$t)
View(netrate)
View(netrate)
times = unique(netrate$h)
ntime = length(times)
zerotol = 10E-6
View(netrate)
View(netrate)
View(netrate)
netrate = read.table(paste(path,pfx,"-group-replacement.csv",sep=""),  sep=",", header=TRUE)
groups = info$i
ngroups = length(groups)
times = unique(netrate$t)
ntime = length(times)
View(netrate)
View(netrate)
i=1
t=1
iidx = netrate$i ==groups[i]
tidx = netrate$t == times[t]
itlambda = netrate$departure_rate[ iidx & tidx]
itlambda
itmu = netrate$arrival_rate[ iidx & tidx]
itmu
View(info)
View(info)
cap = info$Cap[info$i==groups[i]]
cap
Pj_lam = dpois(x=0:cap,lambda=itlambda)
plot(0:cap,Pj_lam)
Pj_lam = dpois(x=0:cap,lambda=itlambda)
Pj_mu = dpois(x=0:cap,lambda=itmu)
for(i in 1:ngroups){
iidx = netrate$i ==groups[i]
for(t in 1:ntime){
tidx = netrate$t == times[t]
itlambda = netrate$departure_rate[ iidx & tidx]
itmu = netrate$arrival_rate[ iidx & tidx]
cap = info$Cap[info$i==groups[i]]
Pj_lam = dpois(x=0:cap,lambda=itlambda)
Pj_mu = dpois(x=0:cap,lambda=itmu)
line = c(groups[i],i,t,"lambda",Pj_lam)
write(line, sep=",",file=poisfile,append=T,ncol=length(line))
line = c(groups[i],i,t,"mu",Pj_mu)
write(line, sep=",",file=poisfile,append=T,ncol=length(line))
}
}
sta
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
plot(Dsave,'l')
plot(1:288,Dsave,'l')
lines(1:288,departure$x31623)
lines(departure$x31623)
plot(1:288,departure$x31623)
lines(1:288,departure$X31623)
departure$X31623
lines(1:48,departure$X31623)
x = seq(0,24,by=.5)
plot(x,Dsave,'l')
length(x)
x = seq(0,23.5,by=.5)
plot(x,Dsave,'l')
plot(x,departure$X31623)
plot(x,departure$X31623,'l')
xx = seq(0,24,by=1/12)
xx=xx[-1]
lines(xx,Dsave)
lines(xx,Dsave,'blue')
lines(xx,Dsave,col'blue')
lines(xx,Dsave,col='blue')
x = seq(0,23.5,by=.5)
plot(x,departure$X31623,'l')
xx = seq(0,24,by=1/12)
xx=xx[-1]
lines(xx,Dsave,col='blue')
x[1]
xx[1]
x = seq(0,23.5,by=.5)
plot(x,departure$X31623,'l')
xx = seq(0,24,by=1/12)
xx=xx[-289]
lines(xx,Dsave,col='blue')
xx[1]
x[1]
path = "C:/Users/annampetrone/Documents/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/"
# avg number of arrivals/departures in each 30 min period at each station
arrival = read.table(paste(path,"arrival-rates-30min.csv",sep=""),  sep=",", header=TRUE)
departure = read.table(paste(path,"departure-rates-30min.csv",sep=""),  sep=",", header=TRUE)
stations = names(arrival)
stations = stations[-1]
sz=dim(as.matrix(departure))
ntime = sz[1]
nstations = length(stations)
tt = ntime*30/5
simfile = paste(path,"simulation.csv",sep="")
header = c("terminal","i","t","Dsim","Asim")
nn= length(header)
write(header, sep=",",file=simfile,append=F,ncol=nn)
i=1
#total_arrivals = sum(arrival[])
arrival[1]
arrival[2]
i=1
d = as.matrix(departure[i+1])
a = as.matrix(arrival[i+1])
total_arrivals = sum(a)
total_departures = sum(d)
total_arrivals
total_departures
w_a = a/total_arrivals
w_a
sum(w_a)
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
warnings()
w_d
Dsim
length(Dsim)
>kron
?kron
?kronecker
kronecker(c(1,1,1),5)
kronecker(c(1,1,1),c(5,6)
)
kronecker(c(5,6),c(1,1,1))
?ones
ones = rep(1,30/5)
ones
kronecker(w_a,ones)
kronecker(w_d,ones)
w_d
lines = cbind(sta,i,1:tt,Dsim,Asim,kronecker(w_d,ones),kronecker(w_a,ones))
write(t(lines), sep=",",file=simfile,append=T,ncol=nn)
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
?ceiling
ceiling(.01)
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
ceiling(w_a*100)
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
source('~/School/Transportation/rebalancing-optimization/opt/opl4/rebal4/simulation.r')
A quick analysis of Baltimore crime
setwd("C:/Users/annampetrone/Google Drive/UMD/classes/CMSC498T - Data Science II/arrests example")
library(rgdal)
library(ggplot2)
setwd("Zipcode/")
bal.zips = readOGR(dsn=".",layer="Zipcode")
setwd("../")
bal.zips.df = fortify(bal.zips)
g = ggplot(bal.zips.df,aes(x=long,y=lat,group=group))
g = g + geom_polygon(fill="white") + geom_path(colour="gray75",size=.1) #draw the tazs
print(g)
arrest_tab=read.csv("BPD_Arrests.csv", stringsAsFactors=FALSE)
View(arrest_tab)
tmp=gsub("\\)","",gsub("\\(","",cctv_tab$Location))
tmp=strsplit(tmp,split=",")
cctv_tab$lon=as.numeric(sapply(tmp,function(x) x[2]))
cctv_tab$lat=as.numeric(sapply(tmp,function(x) x[1]))
table(arrest_tab$neighborhood)
neighbs=table(arrest_tab$neighborhood)
setwd("csa_2010_boundaries/")
csa = readOGR(dsn=".",layer="CSA_NSA_Tracts")
csa@polygons[[1]]
csa@polygons[[1]]@area
csa@data[[1]]
csa.df = fortify(csa)
g = ggplot(csa.df,aes(x=long,y=lat,group=group))
g = g + geom_polygon(fill="white") + geom_path(colour="gray75",size=.1) #draw the tazs
print(g)
head(csa.df)
LL = c(42.3334739,-64.7380997)
library(xlsx)
write.table(csa.df, "csa-df.txt", sep="\t")
csa.df$Latitude = csa.df$lat
csa.df = fortify(csa)
csa.df = rename(csa.df,c("lat"="Latitude","lon="Longitude"))
csa.df = rename(csa.df,c("lat"="Latitude","lon"="Longitude"))
library(plyr)
csa.df = rename(csa.df,c("lat"="Latitude","lon"="Longitude"))
csa.df = rename(csa.df,c("lat"="Latitude","long"="Longitude"))
names(csa.df)
write.table(csa.df, "csa-df.txt", sep="\t")
csa.df$Longitude[1]
LL
csa.df$Longitude[1]
csa.df$Latitude[1]
latLon=c(39.2759943, -76.6572567)
csa.df$Longitude[1]/latLon[2]
csa.df$Latitude[1]/latLon[1]
converted = data.frame("lon","lat")
converted = data.frame("lon","lat")
converted$lon[1] =  -76.6572567
converted$lat[2] = 39.2759943
c(csa.df$Longitude[2] , csa.df$Latitude[2] )
c(csa.df$Longitude[2000] , csa.df$Latitude[2000] )
c(csa.df$Longitude[15000] , csa.df$Latitude[15000] )
c(csa.df$Longitude[36000] , csa.df$Latitude[36000] )
c(csa.df$Longitude[2000] , csa.df$Latitude[2000] )
converted$lat[2] = 39.2729652
converted$lon[2] = -76.6890274
c(csa.df$Longitude[15000] , csa.df$Latitude[15000] )
converted$lat[3] =   39.3283754
converted$lon[3] = -76.6250031
c(csa.df$Longitude[36000] , csa.df$Latitude[36000] )
converted$lat[4] = 39.3359228
converted$lon[4] = -76.5796710
converted$lat
converted = data.frame("lon","lat")
converted
rm(converted)
converted = data.frame("lon","lat")
converted
names(converted)
converted = data.frame(c("lon","lat"))
names(converted)
?data.frame
converted = data.frame("lon"=c(),"lat"=c()))
converted = data.frame("lon"=c(),"lat"=c())
names(converted)
converted = data.frame(lon=c(),lat=c())
names(converted)
converted = data.frame()
converted$lat[1] = 39.2759943
lon=c()
lat = c()
converted = data.frame(lon.lat)
converted$lat[1] = 39.2759943
converted = data.frame(lon,lat)
converted$lat[1] = 39.2759943
lon=vector(length = 4)
lat = c(length=4)
converted = data.frame(lon,lat)
converted$lat[1] = 39.2759943
converted$lon[1] =  -76.6572567
converted$lat[2] = 39.2729652
converted$lon[2] = -76.6890274
converted$lat[3] =   39.3283754
converted$lon[3] = -76.6250031
converted$lat[4] = 39.3359228
converted$lon[4] = -76.5796710
samples = c(1,2000,15000,36000)
?print
print("aa")
samples = c(1,2000,15000,36000)
for (i in 1:4){
print( c(csa.df$Longitude[samples[i]]/converted$lon[i],  csa.df$Latitude[samples[i]]/converted$lat[i]))
}
write.table(csa.df[,c("Latitude","Longitude")], "csa-df.txt", sep="\t")
?write.table
write.csv(csa.df[,c("Latitude","Longitude")], "csa-df.txt", sep="\t", quote=FALSE, na="",row.names=FALSE)
write.csv(csa.df[,c("Latitude","Longitude")], "csa-df.txt",  quote=FALSE, na="",row.names=FALSE)
csa.df = fortify(csa)
csa.converted.df = read.csv("csa-df_converted.txt")
names(csa.converted.df)
?read.csv
csa.converted.df$X39.276[1]
csa.converted.df = read.csv("csa-df_converted.txt",header=FALSE)
header = names(csa.converted.df)
header
csa.converted.df = rename(csa.converted.df, c("V1"="lat","V2"="lon"))
csa.df$long = csa.converted.df$lon
csa.df$lat = csa.converted.df$lat
g = ggplot(csa.df,aes(x=long,y=lat,group=group))
g = g + geom_polygon(fill="white") + geom_path(colour="gray75",size=.1) #draw the tazs
print(g)
narrests = length(arrest_tab)
narrests = dim(arrest_tab)[1]
ncsa = dim(csa.df)[1]
belongs.to = matrix(nrow=narrests,ncol=ncsa)
rm(belongs.to)
csa.df$id
